{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\languagecontext\\\\src\\\\context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = [{\n  language: \"English\",\n  words: {\n    home: \"Home\",\n    events: \"Events\",\n    aboutUs: \"About Us\",\n    contactUs: \"Contact Us\",\n    language: \"Language\"\n  }\n}, {\n  language: \"Persian\",\n  words: {\n    home: \"خانه\",\n    events: \"رویداد ها\",\n    aboutUs: \"درباره ما\",\n    contactUs: \"تماس با ما\",\n    language: \"زبان\"\n  }\n}];\n\nconst LanguageProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [language, setLanguage] = useState(\"English\");\n  const [words, setWord] = useState(\"English\");\n\n  function toggleLang() {}\n\n  useEffect(() => {\n    const newArray = translations.filter(item => item.language == language);\n    const newArray1 = newArray.map(item => item.words); // console.log(newArray1);\n\n    setWord(newArray1);\n    console.log(w);\n    newArray1.map(item => console.log(item.home));\n  }, [language]);\n\n  const changeLanguage = lang => {\n    if (lang == \"فارسی\") {\n      // setLanguage((language)=>(language=\"Persian\"))\n      setLanguage(() => \"Persian\");\n    }\n\n    if (lang == \"English\") {\n      setLanguage(() => \"English\");\n    } // console.log(lang)\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      changeLanguage,\n      words\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LanguageProvider, \"hXSTF4YyikG9Q8JjWISdZ96CGwk=\");\n\n_c = LanguageProvider;\nconst LanguageContext = /*#__PURE__*/createContext();\n\nconst useLanguage = () => {\n  _s2();\n\n  const value = useContext(LanguageContext);\n  return value;\n};\n\n_s2(useLanguage, \"ksutO2/Ix3UeCrGnhyM+QEP505Y=\");\n\nexport { LanguageProvider, LanguageContext, useLanguage };\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","useEffect","useState","createContext","useContext","translations","language","words","home","events","aboutUs","contactUs","LanguageProvider","children","setLanguage","setWord","toggleLang","newArray","filter","item","newArray1","map","console","log","w","changeLanguage","lang","LanguageContext","useLanguage","value"],"sources":["D:/React Project/languagecontext/src/context.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createContext,useContext } from \"react\";\n\nconst translations = [\n  {\n    language: \"English\",\n    words: {\n      home: \"Home\",\n      events: \"Events\",\n      aboutUs: \"About Us\",\n      contactUs: \"Contact Us\",\n      language: \"Language\",\n    },\n  },\n  {\n    language: \"Persian\",\n    words: {\n      home: \"خانه\",\n      events: \"رویداد ها\",\n      aboutUs: \"درباره ما\",\n      contactUs: \"تماس با ما\",\n      language: \"زبان\",\n    },\n  },\n];\n\n\n\n\nconst LanguageProvider=({ children }) =>{\n\nconst [language,setLanguage]=useState(\"English\")\nconst [words,setWord]=useState(\"English\")\n\nfunction toggleLang(){\n  \n}\nuseEffect(()=>{\n  const newArray=translations.filter(item=>(item.language==language))\n  const newArray1=newArray.map(item=>(item.words))\n // console.log(newArray1);\n   setWord(newArray1)\n   console.log(w)\n   newArray1.map(item=>console.log(item.home))\n},[language])\nconst changeLanguage=(lang)=>{\n  \n  if (lang==\"فارسی\"){\n    // setLanguage((language)=>(language=\"Persian\"))\n    setLanguage(()=>\"Persian\")\n    \n  }\n  if (lang==\"English\"){\n    setLanguage(()=>\"English\")\n  }  \n   // console.log(lang)\n    \n       \n}\n\n\n  return <LanguageContext.Provider value={{language,changeLanguage,words}}>{children}</LanguageContext.Provider>;\n}\n\nconst LanguageContext=createContext()\n\nconst useLanguage=()=>{\n  const value=useContext(LanguageContext) \n  return value\n}\nexport { LanguageProvider ,LanguageContext,useLanguage};\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAuBC,UAAvB,QAAyC,OAAzC;;AAEA,MAAMC,YAAY,GAAG,CACnB;EACEC,QAAQ,EAAE,SADZ;EAEEC,KAAK,EAAE;IACLC,IAAI,EAAE,MADD;IAELC,MAAM,EAAE,QAFH;IAGLC,OAAO,EAAE,UAHJ;IAILC,SAAS,EAAE,YAJN;IAKLL,QAAQ,EAAE;EALL;AAFT,CADmB,EAWnB;EACEA,QAAQ,EAAE,SADZ;EAEEC,KAAK,EAAE;IACLC,IAAI,EAAE,MADD;IAELC,MAAM,EAAE,WAFH;IAGLC,OAAO,EAAE,WAHJ;IAILC,SAAS,EAAE,YAJN;IAKLL,QAAQ,EAAE;EALL;AAFT,CAXmB,CAArB;;AA0BA,MAAMM,gBAAgB,GAAC,QAAiB;EAAA;;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAExC,MAAM,CAACP,QAAD,EAAUQ,WAAV,IAAuBZ,QAAQ,CAAC,SAAD,CAArC;EACA,MAAM,CAACK,KAAD,EAAOQ,OAAP,IAAgBb,QAAQ,CAAC,SAAD,CAA9B;;EAEA,SAASc,UAAT,GAAqB,CAEpB;;EACDf,SAAS,CAAC,MAAI;IACZ,MAAMgB,QAAQ,GAACZ,YAAY,CAACa,MAAb,CAAoBC,IAAI,IAAGA,IAAI,CAACb,QAAL,IAAeA,QAA1C,CAAf;IACA,MAAMc,SAAS,GAACH,QAAQ,CAACI,GAAT,CAAaF,IAAI,IAAGA,IAAI,CAACZ,KAAzB,CAAhB,CAFY,CAGb;;IACEQ,OAAO,CAACK,SAAD,CAAP;IACAE,OAAO,CAACC,GAAR,CAAYC,CAAZ;IACAJ,SAAS,CAACC,GAAV,CAAcF,IAAI,IAAEG,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACX,IAAjB,CAApB;EACF,CAPQ,EAOP,CAACF,QAAD,CAPO,CAAT;;EAQA,MAAMmB,cAAc,GAAEC,IAAD,IAAQ;IAE3B,IAAIA,IAAI,IAAE,OAAV,EAAkB;MAChB;MACAZ,WAAW,CAAC,MAAI,SAAL,CAAX;IAED;;IACD,IAAIY,IAAI,IAAE,SAAV,EAAoB;MAClBZ,WAAW,CAAC,MAAI,SAAL,CAAX;IACD,CAT0B,CAU1B;;EAGF,CAbD;;EAgBE,oBAAO,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAACR,QAAD;MAAUmB,cAAV;MAAyBlB;IAAzB,CAAjC;IAAA,UAAmEM;EAAnE;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAjCD;;GAAMD,gB;;KAAAA,gB;AAmCN,MAAMe,eAAe,gBAACxB,aAAa,EAAnC;;AAEA,MAAMyB,WAAW,GAAC,MAAI;EAAA;;EACpB,MAAMC,KAAK,GAACzB,UAAU,CAACuB,eAAD,CAAtB;EACA,OAAOE,KAAP;AACD,CAHD;;IAAMD,W;;AAIN,SAAShB,gBAAT,EAA2Be,eAA3B,EAA2CC,WAA3C"},"metadata":{},"sourceType":"module"}