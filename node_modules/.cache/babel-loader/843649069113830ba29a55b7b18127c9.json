{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Project\\\\languagecontext\\\\src\\\\context.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { createContext, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst translations = [{\n  language: \"English\",\n  words: {\n    home: \"Home\",\n    events: \"Events\",\n    aboutUs: \"About Us\",\n    contactUs: \"Contact Us\",\n    language: \"Language\"\n  }\n}, {\n  language: \"Persian\",\n  words: {\n    home: \"خانه\",\n    events: \"رویداد ها\",\n    aboutUs: \"درباره ما\",\n    contactUs: \"تماس با ما\",\n    language: \"زبان\"\n  }\n}];\n\nfunction LanguageProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [language, setLanguage] = useState(\"English\");\n  const [word, setWord] = useState(\"English\");\n\n  function toggleLang() {\n    setLanguage(language => language === \"English\");\n  }\n\n  const changeLanguage = lang => {\n    console.log(lang);\n\n    if (lang == \"فارسی\") {\n      setLanguage(language => language = \"Persian\");\n    }\n\n    if (lang == \"English\") {\n      setLanguage(language => language = \"English\");\n    } // console.log(lang)\n\n\n    const newArray = translations.filter(item => item.language == language);\n    console.log(newArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      changeLanguage,\n      word\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n\n_s(LanguageProvider, \"vvcM2DQyfFqavUXGjFWpSEvXfZA=\");\n\n_c = LanguageProvider;\nconst LanguageContext = /*#__PURE__*/createContext();\n\nconst useLanguage = () => {\n  _s2();\n\n  const value = useContext(LanguageContext);\n  return value;\n};\n\n_s2(useLanguage, \"ksutO2/Ix3UeCrGnhyM+QEP505Y=\");\n\nexport { LanguageProvider, LanguageContext, useLanguage };\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","useState","createContext","useContext","translations","language","words","home","events","aboutUs","contactUs","LanguageProvider","children","setLanguage","word","setWord","toggleLang","changeLanguage","lang","console","log","newArray","filter","item","LanguageContext","useLanguage","value"],"sources":["D:/React Project/languagecontext/src/context.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createContext,useContext } from \"react\";\n\nconst translations = [\n  {\n    language: \"English\",\n    words: {\n      home: \"Home\",\n      events: \"Events\",\n      aboutUs: \"About Us\",\n      contactUs: \"Contact Us\",\n      language: \"Language\",\n    },\n  },\n  {\n    language: \"Persian\",\n    words: {\n      home: \"خانه\",\n      events: \"رویداد ها\",\n      aboutUs: \"درباره ما\",\n      contactUs: \"تماس با ما\",\n      language: \"زبان\",\n    },\n  },\n];\n\n\n\n\nfunction LanguageProvider({ children }) {\n\nconst [language,setLanguage]=useState(\"English\")\nconst [word,setWord]=useState(\"English\")\n\nfunction toggleLang(){\n  setLanguage((language)=>(language===\"English\"))\n}\nconst changeLanguage=(lang)=>{\n  console.log(lang)\n  if (lang==\"فارسی\"){\n    setLanguage((language)=>(language=\"Persian\"))\n  }\n  if (lang==\"English\"){\n    setLanguage((language)=>(language=\"English\"))\n  }  \n   // console.log(lang)\n    const newArray=translations.filter(item=>(item.language==language))\n    console.log(newArray);\n       \n}\n\n\n  return <LanguageContext.Provider value={{language,changeLanguage,word}}>{children}</LanguageContext.Provider>;\n}\n\nconst LanguageContext=createContext()\n\nconst useLanguage=()=>{\n  const value=useContext(LanguageContext) \n  return value\n}\nexport { LanguageProvider ,LanguageContext,useLanguage};\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,aAAT,EAAuBC,UAAvB,QAAyC,OAAzC;;AAEA,MAAMC,YAAY,GAAG,CACnB;EACEC,QAAQ,EAAE,SADZ;EAEEC,KAAK,EAAE;IACLC,IAAI,EAAE,MADD;IAELC,MAAM,EAAE,QAFH;IAGLC,OAAO,EAAE,UAHJ;IAILC,SAAS,EAAE,YAJN;IAKLL,QAAQ,EAAE;EALL;AAFT,CADmB,EAWnB;EACEA,QAAQ,EAAE,SADZ;EAEEC,KAAK,EAAE;IACLC,IAAI,EAAE,MADD;IAELC,MAAM,EAAE,WAFH;IAGLC,OAAO,EAAE,WAHJ;IAILC,SAAS,EAAE,YAJN;IAKLL,QAAQ,EAAE;EALL;AAFT,CAXmB,CAArB;;AA0BA,SAASM,gBAAT,OAAwC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAExC,MAAM,CAACP,QAAD,EAAUQ,WAAV,IAAuBZ,QAAQ,CAAC,SAAD,CAArC;EACA,MAAM,CAACa,IAAD,EAAMC,OAAN,IAAed,QAAQ,CAAC,SAAD,CAA7B;;EAEA,SAASe,UAAT,GAAqB;IACnBH,WAAW,CAAER,QAAD,IAAaA,QAAQ,KAAG,SAAzB,CAAX;EACD;;EACD,MAAMY,cAAc,GAAEC,IAAD,IAAQ;IAC3BC,OAAO,CAACC,GAAR,CAAYF,IAAZ;;IACA,IAAIA,IAAI,IAAE,OAAV,EAAkB;MAChBL,WAAW,CAAER,QAAD,IAAaA,QAAQ,GAAC,SAAvB,CAAX;IACD;;IACD,IAAIa,IAAI,IAAE,SAAV,EAAoB;MAClBL,WAAW,CAAER,QAAD,IAAaA,QAAQ,GAAC,SAAvB,CAAX;IACD,CAP0B,CAQ1B;;;IACC,MAAMgB,QAAQ,GAACjB,YAAY,CAACkB,MAAb,CAAoBC,IAAI,IAAGA,IAAI,CAAClB,QAAL,IAAeA,QAA1C,CAAf;IACAc,OAAO,CAACC,GAAR,CAAYC,QAAZ;EAEH,CAZD;;EAeE,oBAAO,QAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE;MAAChB,QAAD;MAAUY,cAAV;MAAyBH;IAAzB,CAAjC;IAAA,UAAkEF;EAAlE;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GAxBQD,gB;;KAAAA,gB;AA0BT,MAAMa,eAAe,gBAACtB,aAAa,EAAnC;;AAEA,MAAMuB,WAAW,GAAC,MAAI;EAAA;;EACpB,MAAMC,KAAK,GAACvB,UAAU,CAACqB,eAAD,CAAtB;EACA,OAAOE,KAAP;AACD,CAHD;;IAAMD,W;;AAIN,SAASd,gBAAT,EAA2Ba,eAA3B,EAA2CC,WAA3C"},"metadata":{},"sourceType":"module"}